---
---

<div class="custom-cursor"></div>
<div class="cursor-follower"></div>

<style>
  .custom-cursor,
  .cursor-follower {
    position: fixed;
    pointer-events: none;
    z-index: 9999;
    display: none;
  }

  @media (hover: hover) and (pointer: fine) {
    .custom-cursor {
      width: 8px;
      height: 8px;
      background-color: #2563eb;
      border-radius: 50%;
      display: block;
      transform: translate(-50%, -50%);
      transition: transform 0.1s ease-out;
    }

    .cursor-follower {
      width: 30px;
      height: 30px;
      border: 2px solid rgba(37, 99, 235, 0.3);
      border-radius: 50%;
      display: block;
      transform: translate(-50%, -50%);
      transition: all 0.15s ease-out;
    }

    .cursor-hover {
      transform: translate(-50%, -50%) scale(2);
    }

    .cursor-follower-hover {
      transform: translate(-50%, -50%) scale(1.5);
      background-color: rgba(37, 99, 235, 0.1);
    }
  }
</style>

<script>
  if (window.matchMedia('(hover: hover) and (pointer: fine)').matches) {
    const cursor = document.querySelector('.custom-cursor') as HTMLDivElement;
    const follower = document.querySelector('.cursor-follower') as HTMLDivElement;
    
    let mouseX = 0;
    let mouseY = 0;
    let followerX = 0;
    let followerY = 0;
    
    document.addEventListener('mousemove', (e) => {
      mouseX = e.clientX;
      mouseY = e.clientY;
      
      cursor.style.left = mouseX + 'px';
      cursor.style.top = mouseY + 'px';
    });
    
    // Smooth follower animation
    const animateFollower = () => {
      followerX += (mouseX - followerX) * 0.1;
      followerY += (mouseY - followerY) * 0.1;
      
      follower.style.left = followerX + 'px';
      follower.style.top = followerY + 'px';
      
      requestAnimationFrame(animateFollower);
    };
    animateFollower();
    
    // Add hover effects
    const hoverElements = document.querySelectorAll('a, button, .hover-lift');
    hoverElements.forEach(el => {
      el.addEventListener('mouseenter', () => {
        cursor.classList.add('cursor-hover');
        follower.classList.add('cursor-follower-hover');
      });
      
      el.addEventListener('mouseleave', () => {
        cursor.classList.remove('cursor-hover');
        follower.classList.remove('cursor-follower-hover');
      });
    });
    
    // Hide default cursor on supported elements
    document.body.style.cursor = 'none';
    document.addEventListener('mouseleave', () => {
      cursor.style.display = 'none';
      follower.style.display = 'none';
    });
    
    document.addEventListener('mouseenter', () => {
      cursor.style.display = 'block';
      follower.style.display = 'block';
    });
  }
</script>