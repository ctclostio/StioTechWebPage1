---
export interface Props {
  text: string;
  class?: string;
}

const { text, class: className = '' } = Astro.props;
---

<span class={`glitch-text ${className}`} data-text={text}>
  {text}
</span>

<style>
  .glitch-text {
    position: relative;
    display: inline-block;
    font-weight: bold;
  }

  .glitch-text::before,
  .glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.8;
  }

  .glitch-text::before {
    animation: glitch-1 0.5s infinite;
    color: var(--cyber-cyan);
    z-index: -1;
  }

  .glitch-text::after {
    animation: glitch-2 0.5s infinite;
    color: var(--cyber-red);
    z-index: -2;
  }

  @keyframes glitch-1 {
    0% {
      clip-path: inset(40% 0 61% 0);
      transform: translate(-2px, -2px);
    }
    20% {
      clip-path: inset(92% 0 1% 0);
      transform: translate(2px, 2px);
    }
    40% {
      clip-path: inset(43% 0 1% 0);
      transform: translate(-2px, 2px);
    }
    60% {
      clip-path: inset(25% 0 58% 0);
      transform: translate(2px, -2px);
    }
    80% {
      clip-path: inset(54% 0 7% 0);
      transform: translate(-2px, 2px);
    }
    100% {
      clip-path: inset(58% 0 43% 0);
      transform: translate(2px, -2px);
    }
  }

  @keyframes glitch-2 {
    0% {
      clip-path: inset(50% 0 30% 0);
      transform: translate(2px, 2px);
    }
    20% {
      clip-path: inset(76% 0 21% 0);
      transform: translate(-2px, -2px);
    }
    40% {
      clip-path: inset(30% 0 45% 0);
      transform: translate(2px, -2px);
    }
    60% {
      clip-path: inset(85% 0 10% 0);
      transform: translate(-2px, 2px);
    }
    80% {
      clip-path: inset(13% 0 80% 0);
      transform: translate(2px, 2px);
    }
    100% {
      clip-path: inset(70% 0 15% 0);
      transform: translate(-2px, -2px);
    }
  }

  .glitch-text:hover::before,
  .glitch-text:hover::after {
    animation-duration: 0.2s;
  }
</style>